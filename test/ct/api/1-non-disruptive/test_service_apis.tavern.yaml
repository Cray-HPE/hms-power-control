# MIT License
#
# (C) Copyright [2023] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the PCS service APIs
# Author: Mitch Schooler
# Service: Power Control Service

# HMS test metrics test cases: 3
# GET /health
# GET /liveness
# GET /readiness
---
test_name: Verify the PCS service APIs

stages:
  - name: Ensure that /health can be retrieved
    request:
      url: "{pcs_base_url}/health"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              KvStore:
                type: str
                required: True
                enum:
                  - "connected, responsive"
              DistLocking:
                type: str
                required: True
                enum:
                  - "connected, responsive"
              StateManager:
                type: str
                required: True
                enum:
                  - "connected, responsive"
              Vault:
                type: str
                required: True
                enum:
                  - "connected, responsive"
              TaskRunner:
                type: str
                required: True
                enum:
                  - "connected, responsive, local mode"

  - name: Ensure that /liveness can be retrieved
    request:
      url: "{pcs_base_url}/liveness"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 204

  - name: Ensure that /readiness can be retrieved
    request:
      url: "{pcs_base_url}/readiness"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 204
