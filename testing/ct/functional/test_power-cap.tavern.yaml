# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the PCS power-cap API
# Author: Mitch Schooler
# Service: Power Control Service

# HMS test metrics test cases: 8
# 1. POST /power-cap/snapshot API response code
# 2. POST /power-cap/snapshot API response body
# 3. GET /power-cap/{taskID} API response code snapshot
# 4. GET /power-cap/{taskID} API response body snapshot
# 5. GET /power-cap API response code
# 6. GET /power-cap API response body

# Negative tests
# 7. PUT /power-cap API response code
# 8. DELETE /power-cap API response code
---
test_name: Verify the PCS power-cap resource

stages:
  - name: Get compute node xname from HSM Components to use in upcoming stages
    request:
      url: "{hsm_base_url}/hsm/v2/State/Components?type=Node&Role=Compute"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      save:
        json:
          xname: Components[0].ID

  # 1. POST /power-cap/snapshot API response code
  # 2. POST /power-cap/snapshot API response body
  - name: Ensure that PCS power cap snapshots can be generated
    request:
      url: "{pcs_base_url}/power-cap/snapshot"
      json: {"xnames":["{xname}"]}
      method: POST
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              taskID:
                type: str
                required: True
      save:
        json:
          snapshotTaskID: taskID

  # 3. GET /power-cap/{taskID} API response code snapshot
  # 4. GET /power-cap/{taskID} API response body snapshot
  - name: Ensure that PCS power cap snapshots can be retrieved
    request:
      url: "{pcs_base_url}/power-cap/{snapshotTaskID}"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              #TODO: this field from the Swagger is not actually present
              #taskInfo:
              taskID:
                type: str
                required: True
              type:
                type: str
                required: True
                enum:
                  - "snapshot"
                  - "patch"
              taskCreateTime:
                type: timestamp
                required: True
              automaticExpirationTime:
                type: timestamp
                required: True
              taskStatus:
                type: str
                required: True
                enum:
                  - "new"
                  - "in-progress"
                  - "completed"
              taskCounts:
                type: map
                required: True
                mapping:
                  total:
                    type: int
                    required: True
                    enum:
                      - 1
                  new:
                    type: int
                    required: True
                  in-progress:
                    type: int
                    required: True
                  failed:
                    type: int
                    required: True
                  succeeded:
                    type: int
                    required: True
                  un-supported:
                    type: int
                    required: True
              components:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      xname:
                        type: str
                        required: True
                        enum:
                          - "{xname}"
                      error:
                        type: str
                        required: True
                        #TODO: remove these
                        #enum:
                        #  - "Type, NodeBMC unsupported for power capping"
                        #TODO: seeing this vvv on real hardware and in build environment
                        #  - "Missing Power Cap URI"
                        #  - "Xname not found in HSM"

  # 5. GET /power-cap API response code
  # 6. GET /power-cap API response body
  - name: Ensure that PCS power cap tasks can be retrieved
    request:
      url: "{pcs_base_url}/power-cap"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 200
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              tasks:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      taskID:
                        type: str
                        required: True
                      type:
                        type: str
                        required: True
                        enum:
                          - "snapshot"
                          - "patch"
                      taskCreateTime:
                        type: timestamp
                        required: True
                      automaticExpirationTime:
                        type: timestamp
                        required: True
                      taskStatus:
                        type: str
                        required: True
                        enum:
                          - "new"
                          - "in-progress"
                          - "completed"
                      taskCounts:
                        type: map
                        required: True
                        mapping:
                          total:
                            type: int
                            required: True
                          new:
                            type: int
                            required: True
                          in-progress:
                            type: int
                            required: True
                          failed:
                            type: int
                            required: True
                          succeeded:
                            type: int
                            required: True
                          un-supported:
                            type: int
                            required: True

---
test_name: Verify the PCS power-cap resource negative cases

stages:
  # 7. PUT /power-cap API response code
  - name: Ensure that the PCS power-cap resource correctly handles unsupported PUT operations
    request:
      url: "{pcs_base_url}/power-cap"
      method: PUT
      verify: !bool "{verify}"
    response:
      # TODO: Swagger file is missing this response
      status_code: 405

  # 8. DELETE /power-cap API response code
  - name: Ensure that the PCS power-cap resource correctly handles unsupported DELETE operations
    request:
      url: "{pcs_base_url}/power-cap"
      method: DELETE
      verify: !bool "{verify}"
    response:
      # TODO: Swagger file is missing this response
      status_code: 405
