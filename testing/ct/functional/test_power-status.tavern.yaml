# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the PCS power-status API
# Author: Mitch Schooler
# Service: Power Control Service

# HMS test metrics test cases: 2
# 1. GET /power-status API response code
# 2. GET /power-status API response body
---
test_name: Verify the PCS power-status resource

stages:
  # 1. GET /power-status API response code
  # 2. GET /power-status API response body
  - name: Ensure that the PCS power status can be retrieved
    request:
      url: "{pcs_base_url}/power-status"
      method: GET
      verify: !bool "{verify}"
    response:
      status_code: 202
      verify_response_with:
        function: tavern.testutils.helpers:validate_pykwalify
        extra_kwargs:
          schema:
            type: map
            required: True
            mapping:
              status:
                type: seq
                matching: all
                required: True
                sequence:
                  - type: map
                    required: True
                    mapping:
                      xname:
                        type: str
                        required: True
                        pattern: "^[xs].+"
                      powerState:
                        type: str
                        required: True
                        #TODO: more enums here?
                        enum:
                          - "on"
                          - "off"
                      managementState:
                        type: str
                        required: True
                      error:
                        type: str
                        required: True
                      supportedPowerTransitions:
                        type: seq
                        matching: all
                        required: True
                        sequence:
                          - type: str
                            required: True
