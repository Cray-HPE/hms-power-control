# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the PCS power-status API
# Author: Mitch Schooler
# Service: Power Control Service

# HMS test metrics test cases: 6
# 1. GET /power-status API response code
# 2. GET /power-status API response body

# Negative tests
# 3. POST /power-status API response code
# 4. PUT /power-status API response code
# 5. PATCH /power-status API response code
# 6. DELETE /power-status API response code
---
test_name: Verify the PCS power-status resource

stages:
  # 1. GET /power-status API response code
  # 2. GET /power-status API response body
  - name: Ensure that the PCS power status can be retrieved
    request:
      #TODO: CASMHMS-5453
      #url: "{pcs_base_url}/power-status"
      url: "{pcs_base_url}/power-status?powerStateFilter=on"
      method: GET
      verify: !bool "{verify}"
    response:
      #TODO: CASMHMS-5454
      status_code: 200
      #TODO: {"status":null} being returned from local PCS instance
      #verify_response_with:
      #  function: tavern.testutils.helpers:validate_pykwalify
      #  extra_kwargs:
      #    schema:
      #      type: map
      #      required: True
      #      mapping:
      #        status:
      #          type: seq
      #          matching: all
      #          required: True
      #          sequence:
      #            - type: map
      #              required: True
      #              mapping:
      #                xname:
      #                  type: str
      #                  required: True
      #                  pattern: "^[xs].+"
      #                powerState:
      #                  type: str
      #                  required: True
      #                  enum:
      #                    - "on"
      #                    - "off"
      #                    - "undefined"
      #                managementState:
      #                  type: str
      #                  required: True
      #                  enum:
      #                    - "available"
      #                    - "unavailable"
      #                error:
      #                  type: str
      #                  required: True
      #                supportedPowerTransitions:
      #                  type: seq
      #                  matching: all
      #                  required: True
      #                  sequence:
      #                    - type: str
      #                      required: True
---
test_name: Verify the PCS power-status resource negative cases

stages:
  # 3. POST /power-status API response code
  - name: Ensure that the PCS power-status resource correctly handles unsupported POST operations
    request:
      url: "{pcs_base_url}/power-status"
      method: POST
      verify: !bool "{verify}"
    response:
      # TODO: according to the Swagger file this should be 400
      status_code: 405

  # 4. PUT /power-status API response code
  - name: Ensure that the PCS power-status resource correctly handles unsupported PUT operations
    request:
      url: "{pcs_base_url}/power-status"
      method: PUT
      verify: !bool "{verify}"
    response:
      # TODO: according to the Swagger file this should be 400
      status_code: 405

  # 5. PATCH /power-status API response code
  - name: Ensure that the PCS power-status resource correctly handles unsupported PATCH operations
    request:
      url: "{pcs_base_url}/power-status"
      method: PATCH
      verify: !bool "{verify}"
    response:
      # TODO: according to the Swagger file this should be 400
      status_code: 405

  # 6. DELETE /power-status API response code
  - name: Ensure that the PCS power-status resource correctly handles unsupported DELETE operations
    request:
      url: "{pcs_base_url}/power-status"
      method: DELETE
      verify: !bool "{verify}"
    response:
      # TODO: according to the Swagger file this should be 400
      status_code: 405
